{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","sortType","setSortType","visibleGoods","goods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","NONE","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0EAZQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAEGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAhCD,SACLC,EACAH,EACAF,GAEA,IAAMI,EAAY,YAAOC,GAoBzB,OAlBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKN,EAASa,QACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKZ,EAASe,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITZ,GACFI,EAAaS,UAIfC,QAAQC,IAAIb,EAAUF,GAEfI,EAOcY,CACnBnB,EACAK,EACAF,GAWF,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAC9B,CAAE,WAAYjB,IAAaN,EAASa,UACtCW,QAfoB,kBAAMjB,EAAYP,EAASa,UAWjD,iCASA,wBACES,KAAK,SACLD,UAAWE,IAAW,SAAU,UAC9B,CAAE,WAAYjB,IAAaN,EAASe,SACtCS,QAvBkB,kBAAMjB,EAAYP,EAASe,SAmB/C,4BASA,wBACEO,KAAK,SACLD,UAAWE,IAAW,SAAU,UAC9B,CAAE,YAA2B,IAAfnB,IAChBoB,QA/BgB,kBAAMnB,GAAaD,IA2BrC,uBASiB,IAAfA,GAAuBE,IAAaN,EAASyB,OAEzC,wBACEH,KAAK,SACLD,UAAU,4BACVG,QAxCO,WACnBjB,EAAYP,EAASyB,MACrBpB,GAAY,IAmCF,sBAUR,6BACE,6BACGG,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC/GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.92086e68.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(0);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  const handlerSortAlphabet = () => setSortType(SortType.ALPABET);\n  const handlersortLength = () => setSortType(SortType.LENGTH);\n  const handlerReversed = () => setReversed(!isReversed);\n  const handlerReset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info',\n            { 'is-light': sortType !== SortType.ALPABET })}\n          onClick={handlerSortAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={handlersortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info',\n            { 'is-light': isReversed === false })}\n          onClick={handlerReversed}\n        >\n          Reverse\n        </button>\n\n        {(isReversed === true || sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={handlerReset}\n              >\n                Reset\n              </button>\n            )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}